@model SistemaCadastroCliente.Data.DTOs.LoginDto

@{
    ViewData["Title"] = "Login";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap" rel="stylesheet"> 
    <style>
        body {
            font-family: 'Lato', sans-serif; 
        }
        </style>
</head>
<body class="bg-light">
    <div class="container d-flex justify-content-center align-items-center vh-100">
        <div class="row w-100">
            <div class="col-md-6 col-lg-4 mx-auto">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center mb-4">Login</h2>
                        <form id="loginForm">
                            <div class="form-group">
                                <label asp-for="Username" class="control-label"></label>
                                <input asp-for="Username" class="form-control" />
                                <span asp-validation-for="Username" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Password" class="control-label"></label>
                                <input asp-for="Password" type="password" class="form-control" />
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <p class="mt-3 text-center">
                                Não tem registro? <a href="/Usuario/Register">Registre-se</a>
                            </p>
                            <button type="submit" class="btn btn-primary btn-block">Login</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            document.getElementById('loginForm').addEventListener('submit', async function (event) {
                event.preventDefault();

                const form = event.target;
                const formData = new FormData(form);
                const data = new URLSearchParams(formData).toString();

                try {
                    const response = await fetch('/Usuario/Login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: data
                    });

                    if (!response.ok) {
                        throw new Error('Falha na autenticação');
                    }

                    const result = await response.json();
                    const token = result.token;

                    if (token) {
                        localStorage.setItem('authToken', token);
                    } else {
                        throw new Error('Token não recebido');
                    }

                    window.location.href = '/' + result.redirectUrl.replace(/^\/+/, '');

                } catch (error) {
                    console.error('Erro ao fazer login:', error);
                    alert('Erro ao fazer login: ' + error.message);
                }
            });
        </script>
    }
</body>
</html>
